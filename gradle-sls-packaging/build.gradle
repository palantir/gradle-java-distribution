apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'org.inferred.processors'
apply plugin: 'de.undercouch.download'

dependencies {
    processor 'org.immutables:value:2.5.6'

    compile project(':sls-versions')
    compile gradleApi()
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.11'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.11'

    testCompile gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test:6.1.2'
}

pluginBundle {
    website = 'https://github.com/palantir/sls-packaging'
    vcsUrl = 'https://github.com/palantir/sls-packaging'
    description = 'Creates a distributable package containing libraries and scripts necessary to easily deploy and run a Java project.'
    tags = ['distribution', 'application']

    plugins {
        javaServiceDistributionPlugin {
            id = 'com.palantir.sls-java-service-distribution'
            displayName = 'Creates SLS Java services distributions'
        }
        assetDistributionPlugin {
            id = 'com.palantir.sls-asset-distribution'
            displayName = 'Creates SLS asset distributions'
        }
        podDistributionPlugin {
            id = 'com.palantir.sls-pod-distribution'
            displayName = 'Creates SLS pod distributions'
        }
    }
}

task downloadYourkitDist(type: Download) {
    src 'https://www.yourkit.com/download/YourKit-JavaProfiler-2017.02-b75.zip'
    dest buildDir
}

task verifyYourkitDist(type: Verify, dependsOn: downloadYourkitDist) {
    src new File(buildDir, 'YourKit-JavaProfiler-2017.02-b75.zip')
    algorithm 'MD5'
    checksum '4dbed7686fabe215379393720e7c73b5'
}

task extractYourkitAgent(type: Copy, dependsOn: verifyYourkitDist) {
    def zipFile = new File(buildDir, 'YourKit-JavaProfiler-2017.02-b75.zip')
    from zipTree(zipFile)
    include '**/linux-x86-64/libyjpagent.so'
    eachFile { path = name } // Flatten directory with single file
    into file("${buildDir}/resources/main/linux-x86-64")
    includeEmptyDirs = false // Cleanup empty Yourkit dist directories
}

publishPlugins.onlyIf {
    project.version ==~ /[0-9]+(\.[0-9]+)+(-rc[0-9]+)?(-alpha[0-9]+)?/
}

test {
    maxHeapSize = '1g'
}